{"version":3,"file":"Pagination-stories.1c9b0ed3.iframe.bundle.js","mappings":";;AAQA;;AAKA;AAEA;AAFA;AAOA;AAMA;;;AAKA;AAQA;;;;AAIA;AACA;;;;;;;AAOA;;;;AAIA;;;;AAIA;AACA;;AAIA;AAIA;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;AAKA;;;;;;ACpEA;AACA;;AAGA","sources":["webpack://sagu-ui/./src/packages/Pagination/styles.tsx","webpack://sagu-ui/./src/styles/media.ts"],"sourcesContent":["import styled, { css } from 'styled-components'\nimport { Colors } from '.'\nimport { theme } from '../../styles'\n\nconst figureArrowModifiers = {\n  left: () => css`\n    transform: rotate(-135deg) translate(-50%);\n  `,\n  right: () => css`\n    transform: rotate(45deg);\n  `\n}\n\nconst pageColor = {\n  default: (colors?: Colors) => css`\n    background-color: ${colors && colors.page\n      ? colors.page\n      : theme.colors.neutral.medium};\n  `,\n  hover: (colors?: Colors) => css`\n    background-color: ${colors && colors.hover\n      ? colors.hover\n      : theme.colors.neutral.medium};\n  `\n}\n\nexport const Container = styled.ul`\n  display: flex;\n  list-style-type: none;\n`\n\nexport const Item = styled.li<{\n  selected?: boolean\n  disabled?: boolean\n  colors?: {\n    page?: string\n    hover?: string\n  }\n}>`\n  ${({ theme, selected, disabled, colors }) => css`\n    padding: 0 1.2rem;\n    height: 3.6rem;\n    text-align: center;\n    margin: auto ${theme.spacings.mini};\n    color: ${theme.colors.base.black};\n    display: flex;\n    box-sizing: border-box;\n    align-items: center;\n    letter-spacing: 0.01071rem;\n    border-radius: 1.8rem;\n    line-height: 1.5;\n    font-size: ${theme.font.sizes.small};\n    min-width: 3.6rem;\n\n    :hover {\n      ${pageColor['hover'](colors)}\n      cursor: pointer;\n    }\n\n    ${selected ? pageColor['default'](colors) : ''}\n    ${disabled ? 'pointer-events: none;' : ''}\n  `}\n`\n\nexport const Arrow = styled.div<{\n  direction: 'left' | 'right'\n  disabled: boolean\n}>`\n  ${({ theme, direction, disabled }) => css`\n    :before {\n      position: relative;\n      content: '';\n      display: block;\n      width: 0.8rem;\n      height: 0.8rem;\n      border-right: 0.12rem solid ${theme.colors.base.black};\n      border-top: 0.12rem solid ${theme.colors.base.black};\n      visibility: ${disabled ? 'hidden' : 'visible'};\n      ${figureArrowModifiers[direction]}\n      top: ${direction === 'left' ? '-0.2rem' : 'unset'};\n    }\n  `}\n`\n\nexport const Dots = styled(Item)`\n  :hover {\n    background-color: transparent;\n    cursor: default;\n  }\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n"],"names":[],"sourceRoot":""}