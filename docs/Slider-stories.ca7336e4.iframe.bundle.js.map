{"version":3,"file":"Slider-stories.ca7336e4.iframe.bundle.js","mappings":";AAIA;;;;AAIA;;;;;;;;;;;;;;;;;ACOA;AAEA;;AAEA;AAIA;AACA;;;;AAIA;;AAIA;AACA;AACA;AACA;;AAIA;AAKA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;;AAEA;;;;;AAKA;;;;AAIA;AACA;;;;;AAKA;;AAEA;;;AAGA;;;AAGA;;;;;;;AASA;AACA;;;AApFA;;;;AA6FA;AACA;AA/FA;AAAA;;AAmGA;AAGA;;;;;;;AC9FA;AACA;;AAGA","sources":["webpack://sagu-ui/./src/animations/placeholder.ts","webpack://sagu-ui/./src/packages/Slider/styles.ts","webpack://sagu-ui/./src/styles/media.ts"],"sourcesContent":["import { css } from 'styled-components'\nimport { theme } from './../styles'\n\nconst placeholder = css`\n  color: ${theme.colors.neutral.lighter};\n  background-image: linear-gradient(\n    to right,\n    currentColor 0%,\n    ${theme.colors.neutral.medium} 20%,\n    currentColor 40%,\n    currentColor 100%\n  );\n  background-size: 80rem 14rem;\n  animation: placeholder 1s linear infinite forwards;\n\n  @keyframes placeholder {\n    0% {\n      background-position: -40rem 0;\n    }\n    100% {\n      background-position: 40rem 0;\n    }\n  }\n`\n\nexport default placeholder\n","import styled, { css } from 'styled-components'\nimport { placeholder } from '../../animations/'\nimport { SliderProps } from '.'\nimport { DotType } from './Dot'\n\n// Why 20px?\n// dotsHeight = 8px, if we set dotsSpace to 20px, so we have a two-side (top, bottom) space is 6px.\n// It's good enough to users see dots clearly\nconst dotsHeight = '8px'\nconst dotsSpace = '20px'\n\n// 20px is for the height of the dots\nconst figureModifiers = {\n  small: (dots?: boolean) => css`\n    max-width: 40rem;\n    height: ${dots ? `calc(20rem + ${dotsSpace})` : '20rem'};\n  `,\n  large: (dots?: boolean) => css`\n    max-width: 80rem;\n    height: ${dots ? `calc('40rem' + ${dotsSpace})` : '40rem'};\n  `\n}\n\nexport const Figure = styled.figure<Pick<SliderProps, 'size' | 'dots'>>`\n  ${({ size, dots }) => css`\n    position: relative;\n    overflow-x: hidden;\n    height: max-content;\n    ${!!size && figureModifiers[size](dots)}\n  `}\n`\n\nexport const Loading = styled.div<Pick<SliderProps, 'size' | 'dots'>>`\n  ${({ size, dots }) => css`\n    ${!!size && figureModifiers[size](dots)}\n    ${placeholder}\n  `}\n`\n\nexport const Image = styled.img<{\n  active?: boolean\n  position: number\n  dots: boolean\n}>`\n  ${({ theme, active, position, dots }) => css`\n    position: absolute;\n    width: 100%;\n    height: ${dots ? `calc(100% - ${dotsSpace})` : '100%'};\n    transition: transform ${theme.transitions.default};\n    transform: translateX(${active ? 0 : position * 100 + '%'});\n    object-fit: cover;\n    border-radius: ${theme.border.mini};\n\n    ${placeholder}\n  `}\n`\n\nexport const SlideButton = styled.button<{ dots: boolean }>`\n  ${({ theme, dots }) => css`\n    position: absolute;\n    top: ${dots ? `calc(50% - ${dotsSpace}/2)` : '50%'};\n    transform: translateY(-50%) rotate(270deg);\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    background: ${theme.colors.neutral.lightest};\n    border: none;\n    outline: none;\n    cursor: pointer;\n    color: ${theme.colors.primary.light};\n    transition: all ${theme.transitions.default};\n    opacity: 0.7;\n\n    &:hover,\n    &:focus {\n      box-shadow: ${theme.shadows.focus};\n      opacity: 1;\n      color: ${theme.colors.neutral.darkest};\n    }\n    &:first-of-type {\n      left: ${theme.spacings.xsmall};\n    }\n    &:last-of-type {\n      right: ${theme.spacings.xsmall};\n    }\n    &:disabled {\n      opacity: 0.2;\n      cursor: default;\n    }\n  `}\n`\n\nexport const Dots = styled.div`\n  ${() => css`\n    display: inline-flex;\n    position: absolute;\n    bottom: calc((${dotsSpace} - ${dotsHeight}) / 2);\n    left: 50%;\n    transform: translateX(-50%);\n  `}\n`\n\nexport const Dot = styled.div<Pick<DotType, 'active'>>`\n  ${({ theme, active }) => css`\n    width: ${dotsHeight};\n    height: ${dotsHeight};\n    border-radius: 50%;\n    background-color: ${active\n      ? theme.colors.primary.dark\n      : theme.colors.neutral.darker};\n    margin-right: ${theme.spacings.xxsmall};\n\n    :last-child {\n      margin-right: 0;\n    }\n  `}\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n"],"names":[],"sourceRoot":""}