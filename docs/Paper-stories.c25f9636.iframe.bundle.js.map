{"version":3,"file":"Paper-stories.c25f9636.iframe.bundle.js","mappings":";;;AASA;;;AAIA;;AAGA;;AAKA;AAEA;AAEA;AACA;AAEA;;AAKA;AACA;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClDA;AAEA;;AAEA;AAEA;;AAEA;AAIA;AACA;;AAEA;;;AAGA;AACA;;;ACTA;AACA;;AAGA;ACXA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sources":["webpack://sagu-ui/./src/packages/Box/styles.ts","webpack://sagu-ui/./src/packages/Paper/styles.ts","webpack://sagu-ui/./src/styles/media.ts","webpack://sagu-ui/./src/styles/spacingModifier.ts"],"sourcesContent":["import styled, { DefaultTheme, css } from 'styled-components'\nimport { BoxProps } from '.'\nimport { spacingModifier } from '../../styles/spacingModifier'\n\nconst flexModifier = {\n  row: () => css`\n    display: flex;\n    flex-direction: row;\n  `,\n  column: () => css`\n    display: flex;\n    flex-direction: column;\n  `,\n  block: () => css`\n    display: block;\n  `,\n  none: () => css`\n    display: none;\n  `\n}\n\nconst wrapperModifier = {\n  default: (theme: DefaultTheme) => css`\n    background: ${theme.colors.base.white};\n  `,\n  filled: (theme: DefaultTheme) => css`\n    background: ${theme.colors.primary.medium};\n  `,\n  transparent: () => css`\n    background: transparent;\n  `\n}\n\nexport const Wrapper = styled.div<Omit<BoxProps, 'children'>>`\n  ${({\n    theme,\n    padding = 'small',\n    border,\n    shadow,\n    flex = 'block',\n    gap = 'small',\n    justify,\n    alignment,\n    fullWidth,\n    variant = 'default'\n  }) => css`\n    ${!!shadow && ` box-shadow: ${theme.shadows.default};`};\n    ${!!border && `border: 0.2rem solid ${theme.colors.secondary.light};`};\n    width: ${fullWidth ? '100%' : 'fit-content'};\n    height: fit-content;\n    align-items: ${alignment};\n    justify-content: ${justify};\n    z-index: ${theme.layers.menu};\n    ${wrapperModifier[variant](theme)}\n    ${flexModifier[flex]()}\n    ${spacingModifier[padding](theme, 'padding')}\n    ${spacingModifier[gap](theme, 'gap')}\n  `}\n`\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { PaperProps } from '.'\n\nconst paperModifiers = {\n  bottom: (theme: DefaultTheme) => css`\n    left: 0;\n    top: calc(100% + ${theme.spacings.xxsmall});\n  `,\n  left: (theme: DefaultTheme) => css`\n    top: 0;\n    right: calc(100% + ${theme.spacings.xxsmall});\n  `,\n  right: (theme: DefaultTheme) => css`\n    top: 0;\n    left: calc(100% + ${theme.spacings.xxsmall});\n  `\n}\n\nexport const Paper = styled.div<Pick<PaperProps, 'active' | 'placement'>>`\n  ${({ theme, active, placement }) => css`\n    position: absolute;\n    display: ${active ? 'block' : 'none'};\n    width: fit-content;\n    height: fit-content;\n    z-index: ${theme.layers.menu};\n    ${paperModifiers[placement](theme)}\n  `}\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n","import { DefaultTheme, css } from 'styled-components'\nimport theme from '../../src/styles/theme'\n\nexport type SpacingKeys = keyof typeof theme.spacings\n\ntype AttributeProps = 'padding' | 'gap' | 'margin'\n\nexport const spacingModifier = {\n  none: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.none};\n  `,\n  xmini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xmini};\n  `,\n  mini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.mini};\n  `,\n  xxsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxsmall};\n  `,\n  xsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xsmall};\n  `,\n  small: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.small};\n  `,\n  medium: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.medium};\n  `,\n  large: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.large};\n  `,\n  xlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xlarge};\n  `,\n  xxlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxlarge};\n  `\n}\n"],"names":[],"sourceRoot":""}