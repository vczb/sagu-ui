{"version":3,"file":"Modal-stories.234d8326.iframe.bundle.js","mappings":";AAMA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAGA;AACA;AACA;;;AAGA;;;AAGA;;AAKA;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AChDA;;;;AAKA;AACA;;AAEA;AACA;;AAGA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;;;;;;;AAOA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;;;;ACtCA;;;AAIA;;AAEA;;;AAGA;;;AAIA;;AAEA;;;AAGA;;;AAGA;;;AAMA;AACA;;;;;;;;;;;;;;AAcA;;;;;;;AAOA;;AAEA;;;AAKA;AACA;;;AAGA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;;;;;AAKA;AACA;AACA;AACA;;;AAGA;;;;AC7EA;AACA;;AAGA;ACXA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sources":["webpack://sagu-ui/./src/packages/Button/styles.ts","webpack://sagu-ui/./src/packages/Heading/styles.ts","webpack://sagu-ui/./src/packages/Modal/styles.ts","webpack://sagu-ui/./src/styles/media.ts","webpack://sagu-ui/./src/styles/spacingModifier.ts"],"sourcesContent":["import styled, { css, DefaultTheme } from 'styled-components'\nimport { ButtonProps } from '.'\nimport { spacingModifier } from '../../styles/spacingModifier'\n\nconst buttonVariants = {\n  primary: (theme: DefaultTheme) => css`\n    border-color: ${theme.colors.primary.medium};\n    color: ${theme.colors.primary.medium};\n    &:hover {\n      border-color: ${theme.colors.secondary.medium};\n      color: ${theme.colors.secondary.medium};\n    }\n    &:active {\n      border-color: ${theme.colors.secondary.dark};\n      color: ${theme.colors.secondary.dark};\n    }\n  `,\n  secondary: (theme: DefaultTheme) => css`\n    border-color: ${theme.colors.secondary.medium};\n    color: ${theme.colors.secondary.medium};\n    &:hover {\n      border-color: ${theme.colors.primary.light};\n      color: ${theme.colors.primary.light};\n    }\n    &:active {\n      border-color: ${theme.colors.primary.medium};\n      color: ${theme.colors.primary.medium};\n    }\n  `,\n  filled: (theme: DefaultTheme) => css`\n    color: ${theme.colors.base.white};\n    background: ${theme.colors.primary.medium};\n\n    &:hover {\n      background: ${theme.colors.primary.dark};\n    }\n    &:active {\n      background: ${theme.colors.primary.medium};\n    }\n  `\n}\n\nexport const Button = styled.button<\n  Pick<ButtonProps, 'variant' | 'outline' | 'size' | 'padding'>\n>`\n  ${({ theme, variant, outline, size = 'small', padding = 'xxsmall' }) => css`\n    cursor: pointer;\n    border: ${outline ? '0.2rem solid' : 'none'} ;\n    background-color: transparent;\n    font-weight: ${theme.font.weights.bold};\n    border-radius: ${theme.border.radius};\n    transition: ${theme.transitions.default};\n    font-size: ${theme.font.sizes[size]};\n    ${spacingModifier[padding](theme, 'padding')}\n    ${!!variant && buttonVariants[variant](theme)}}\n  `}\n`\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { HeadingProps, lineColors } from '.'\nimport { media } from '../../styles'\n\nexport const WrapperModifiers = {\n  small: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.medium};\n    &::after {\n      width: 3rem;\n    }\n  `,\n  medium: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.xlarge};\n\n    ${media.sm`\n      font-size: ${theme.font.sizes.xxlarge};\n    `}\n  `,\n  huge: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.huge};\n  `,\n  lineLeft: (theme: DefaultTheme, lineColor: lineColors) => css`\n    padding-left: ${theme.spacings.xsmall};\n    border-left: 0.7rem solid ${theme.colors[lineColor].medium};\n  `,\n  lineBottom: (theme: DefaultTheme, lineColor: lineColors) => css`\n    position: relative;\n    margin-bottom: ${theme.spacings.medium};\n    &::after {\n      position: absolute;\n      left: 0;\n      bottom: -1rem;\n      content: '';\n      width: 5rem;\n      border-bottom: 0.5rem solid ${theme.colors[lineColor].medium};\n    }\n  `\n}\n\nexport const Wrapper = styled.h2<HeadingProps>`\n  ${({ theme, color, lineLeft, lineBottom, lineColor, size }) => css`\n    color: ${theme.colors.base[color!]};\n\n    ${lineLeft && WrapperModifiers.lineLeft(theme, lineColor!)}\n    ${lineBottom && WrapperModifiers.lineBottom(theme, lineColor!)}\n    ${!!size && WrapperModifiers[size](theme)}\n  `}\n`\n","import styled, { css } from 'styled-components'\nimport { media } from '../../styles'\nimport { ModalFooterProps, ModalProps } from '.'\n\nconst modalVariants = {\n  small: () => css`\n    width: 100%;\n    ${media.xs`\n\t\t\twidth: 30rem;\n    `}\n  `,\n  medium: () => css`\n    width: 100%;\n    ${media.xs`\n\t\t\twidth: 30rem;\n    `}\n    ${media.sm`\n\t\t\twidth: 50rem;\n    `}\n  `,\n  large: () => css`\n    width: 100%;\n    ${media.xs`\n\t\t\twidth: 30rem;\n    `}\n    ${media.sm`\n\t\t\twidth: 50rem;\n    `}\n    ${media.md`\n\t\t\twidth: 80rem;\n    `}\n  `\n}\n\nexport const ModalWrapper = styled.div<Pick<ModalProps, 'size'>>`\n  ${({ theme, size }) => css`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    & .modal-backdrop {\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n\n    & .modal {\n      background-color: ${theme.colors.base.white};\n      top: 50%;\n      left: 50%;\n      display: flex;\n      flex-direction: column;\n      transform: translate(-50%, -50%);\n      position: absolute;\n      border: ${theme.border.mini} solid ${theme.colors.secondary.medium};\n      box-sizing: border-box;\n      ${size ? modalVariants[size]() : modalVariants.medium()}\n    }\n  `}\n`\n\nexport const ModalBody = styled.div`\n  ${({ theme }) => css`\n    flex-grow: 1;\n    min-height: 10rem;\n    padding: ${theme.spacings.xxsmall} ${theme.spacings.xsmall};\n  `}\n`\n\nexport const ModalHeader = styled.div`\n  ${({ theme }) => css`\n    width: 100%;\n    font-size: ${theme.font.sizes.xlarge};\n    padding: ${theme.spacings.xxsmall} ${theme.spacings.xsmall};\n    margin-left: ${-theme.border.mini};\n    border-bottom: 1px solid ${theme.colors.primary.lighter};\n  `}\n`\n\nexport const ModalFooter = styled.div<Pick<ModalFooterProps, 'align'>>`\n  ${({ theme, align }) => css`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: ${align === 'left' ? 'flex-start' : 'flex-end'};\n    padding: ${theme.spacings.xxsmall} ${theme.spacings.xsmall};\n    border-top: 1px solid ${theme.colors.primary.lighter};\n    margin-left: ${-theme.border.mini};\n\n    & * {\n      margin-left: ${theme.spacings.xsmall};\n    }\n  `}\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n","import { DefaultTheme, css } from 'styled-components'\nimport theme from '../../src/styles/theme'\n\nexport type SpacingKeys = keyof typeof theme.spacings\n\ntype AttributeProps = 'padding' | 'gap' | 'margin'\n\nexport const spacingModifier = {\n  none: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.none};\n  `,\n  xmini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xmini};\n  `,\n  mini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.mini};\n  `,\n  xxsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxsmall};\n  `,\n  xsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xsmall};\n  `,\n  small: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.small};\n  `,\n  medium: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.medium};\n  `,\n  large: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.large};\n  `,\n  xlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xlarge};\n  `,\n  xxlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxlarge};\n  `\n}\n"],"names":[],"sourceRoot":""}