{"version":3,"file":"AutoComplete-stories.684bd1fd.iframe.bundle.js","mappings":";AASA;;;;;AAOA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAIA;;AAIA;;AAKA;AAIA;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;;;;AC3CA;;;AAIA;;AAGA;;AAKA;AAEA;AAEA;AACA;AAEA;;AAKA;AACA;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;;AAGA;;;AAGA;;;;;;;;AClBA;AACA;;AAEA;AACA;AACA;AACA;;;;ACRA;AAEA;;AAEA;AAEA;;AAEA;AAIA;AACA;;AAEA;;;AAGA;AACA;;;;ACtBA;AAKA;AALA;;AAAA;;AAeA;AAYA;AAUA;AACA;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AC9CA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sources":["webpack://sagu-ui/./src/packages/AutoComplete/styles.ts","webpack://sagu-ui/./src/packages/Box/styles.ts","webpack://sagu-ui/./src/packages/Input/styles.ts","webpack://sagu-ui/./src/packages/Label/styles.ts","webpack://sagu-ui/./src/packages/Paper/styles.ts","webpack://sagu-ui/./src/packages/Tag/styles.ts","webpack://sagu-ui/./src/styles/spacingModifier.ts"],"sourcesContent":["import { BaseHTMLAttributes } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Select } from '../Select/styles'\n\nexport type NoOptionsProps = {\n  size?: 'xsmall' | 'small' | 'medium'\n} & BaseHTMLAttributes<HTMLDivElement>\n\nexport const AutoComplete = styled(Select)`\n  ${() => css`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  `}\n`\n\nexport const NoOptionsWrapper = styled.div<Pick<NoOptionsProps, 'size'>>`\n  ${({ theme, size = 'small' }) => css`\n    padding: ${theme.spacings.mini} ${theme.spacings.xxsmall};\n    color: ${theme.colors.neutral.darkest};\n    width: fit-content;\n    height: fit-content;\n    border-radius: ${theme.border.radius};\n    font-size: ${theme.font.sizes[size]};\n    font-weight: ${theme.font.weights.regular};\n  `}\n`\n\nconst figureArrowModifiers = {\n  up: css`\n    transform: rotate(-45deg);\n  `,\n  down: css`\n    transform: rotate(135deg);\n  `\n}\n\nexport const AutoCompleteArrow = styled.div<{\n  direction: 'up' | 'down'\n  show: boolean\n}>`\n  ${({ theme, direction, show }) => css`\n    :before {\n      position: relative;\n      content: '';\n      display: block;\n      width: 1rem;\n      height: 1rem;\n      border-right: 2px solid ${theme.colors.secondary.medium};\n      border-top: 2px solid ${theme.colors.secondary.medium};\n      visibility: ${!show ? 'hidden' : 'visible'};\n      ${figureArrowModifiers[direction]}\n      top: ${direction === 'up' ? '-0.2rem' : 'unset'};\n    }\n  `}\n`\n","import styled, { DefaultTheme, css } from 'styled-components'\nimport { BoxProps } from '.'\nimport { spacingModifier } from '../../styles/spacingModifier'\n\nconst flexModifier = {\n  row: () => css`\n    display: flex;\n    flex-direction: row;\n  `,\n  column: () => css`\n    display: flex;\n    flex-direction: column;\n  `,\n  block: () => css`\n    display: block;\n  `,\n  none: () => css`\n    display: none;\n  `\n}\n\nconst wrapperModifier = {\n  default: (theme: DefaultTheme) => css`\n    background: ${theme.colors.base.white};\n  `,\n  filled: (theme: DefaultTheme) => css`\n    background: ${theme.colors.primary.medium};\n  `,\n  transparent: () => css`\n    background: transparent;\n  `\n}\n\nexport const Wrapper = styled.div<Omit<BoxProps, 'children'>>`\n  ${({\n    theme,\n    padding = 'small',\n    border,\n    shadow,\n    flex = 'block',\n    gap = 'small',\n    justify,\n    alignment,\n    fullWidth,\n    variant = 'default'\n  }) => css`\n    ${!!shadow && ` box-shadow: ${theme.shadows.default};`};\n    ${!!border && `border: 0.2rem solid ${theme.colors.secondary.light};`};\n    width: ${fullWidth ? '100%' : 'fit-content'};\n    height: fit-content;\n    align-items: ${alignment};\n    justify-content: ${justify};\n    z-index: ${theme.layers.menu};\n    ${wrapperModifier[variant](theme)}\n    ${flexModifier[flex]()}\n    ${spacingModifier[padding](theme, 'padding')}\n    ${spacingModifier[gap](theme, 'gap')}\n  `}\n`\n","import styled, { css } from 'styled-components'\nimport { InputProps } from './index'\n\nexport const Input = styled.input<Pick<InputProps, 'label'>>`\n  ${({ theme, label }) => css`\n    background: ${theme.colors.base.white};\n    border-radius: ${theme.border.xxsmall};\n    border: 0.2rem solid ${theme.colors.primary.lighter};\n    border-radius: ${theme.border.xxsmall};\n    color: ${theme.colors.primary.dark};\n    font-size: ${theme.font.sizes.small};\n    font-weight: ${theme.font.weights.regular};\n    font-family: ${theme.font.family.primary};\n    transition: ${theme.transitions.default};\n    outline: none;\n    height: 100%;\n    min-height: ${theme.spacings.xlarge};\n    letter-spacing: 0.1rem;\n    padding: ${label ? '1.5rem 2.2rem 0 1.5rem' : '0 2.2rem 0 1.5rem'};\n    &::placeholder {\n      color: ${theme.colors.primary.medium};\n    }\n    &:hover {\n      border: 0.2rem solid ${theme.colors.secondary.lighter};\n    }\n    &:focus {\n      border: 0.2rem solid ${theme.colors.secondary.light};\n    }\n  `}\n`\n","import styled, { css } from 'styled-components'\n\nexport const Label = styled.label`\n  position: relative;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n`\nexport const Title = styled.span`\n  ${({ theme }) => css`\n    position: absolute;\n    color: ${theme.colors.secondary.medium};\n    font-size: ${theme.font.sizes.xsmall};\n    top: ${theme.spacings.xxsmall};\n    left: ${theme.spacings.xsmall};\n  `}\n`\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { PaperProps } from '.'\n\nconst paperModifiers = {\n  bottom: (theme: DefaultTheme) => css`\n    left: 0;\n    top: calc(100% + ${theme.spacings.xxsmall});\n  `,\n  left: (theme: DefaultTheme) => css`\n    top: 0;\n    right: calc(100% + ${theme.spacings.xxsmall});\n  `,\n  right: (theme: DefaultTheme) => css`\n    top: 0;\n    left: calc(100% + ${theme.spacings.xxsmall});\n  `\n}\n\nexport const Paper = styled.div<Pick<PaperProps, 'active' | 'placement'>>`\n  ${({ theme, active, placement }) => css`\n    position: absolute;\n    display: ${active ? 'block' : 'none'};\n    width: fit-content;\n    height: fit-content;\n    z-index: ${theme.layers.menu};\n    ${paperModifiers[placement](theme)}\n  `}\n`\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { TagProps } from '.'\n\nconst wrapperModifier = {\n  isUppercase: () => css`\n    text-transform: uppercase;\n  `,\n  isBold: (theme: DefaultTheme) => css`\n    font-weight: ${theme.font.weights.bold};\n  `,\n  isPointer: () => css`\n    cursor: pointer;\n  `,\n  isSlashed: () => css`\n    text-decoration: line-through;\n  `\n}\n\nexport const Wrapper = styled.div<\n  Pick<\n    TagProps,\n    | 'isUppercase'\n    | 'isBold'\n    | 'isPointer'\n    | 'isSlashed'\n    | 'size'\n    | 'isDarkBgOnHover'\n    | 'isDarkBg'\n  >\n>`\n  ${({\n    theme,\n    isUppercase,\n    isSlashed,\n    isBold,\n    isPointer,\n    size = 'small',\n    isDarkBgOnHover,\n    isDarkBg\n  }) => css`\n    padding: ${theme.spacings.mini} ${theme.spacings.xxsmall};\n    background: ${isDarkBg\n      ? theme.colors.secondary.dark\n      : theme.colors.primary.light};\n    color: ${theme.colors.base.white};\n    width: fit-content;\n    height: fit-content;\n    border-radius: ${theme.border.radius};\n    font-size: ${theme.font.sizes[size]};\n    font-weight: ${theme.font.weights.regular};\n    ${!!isUppercase && wrapperModifier.isUppercase()};\n    ${!!isPointer && wrapperModifier.isPointer()};\n    ${!!isSlashed && wrapperModifier.isSlashed()};\n    ${!!isBold && wrapperModifier.isBold(theme)};\n    &:hover {\n      background: ${isDarkBgOnHover\n        ? theme.colors.secondary.dark\n        : theme.colors.primary.light};\n    }\n  `}\n`\n","import { DefaultTheme, css } from 'styled-components'\nimport theme from '../../src/styles/theme'\n\nexport type SpacingKeys = keyof typeof theme.spacings\n\ntype AttributeProps = 'padding' | 'gap' | 'margin'\n\nexport const spacingModifier = {\n  none: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.none};\n  `,\n  xmini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xmini};\n  `,\n  mini: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.mini};\n  `,\n  xxsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxsmall};\n  `,\n  xsmall: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xsmall};\n  `,\n  small: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.small};\n  `,\n  medium: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.medium};\n  `,\n  large: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.large};\n  `,\n  xlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xlarge};\n  `,\n  xxlarge: (theme: DefaultTheme, attribute: AttributeProps) => css`\n    ${attribute}: ${theme.spacings.xxlarge};\n  `\n}\n"],"names":[],"sourceRoot":""}