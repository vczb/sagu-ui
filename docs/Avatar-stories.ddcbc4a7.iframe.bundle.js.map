{"version":3,"file":"Avatar-stories.ddcbc4a7.iframe.bundle.js","mappings":";AAIA;;;;AAIA;;;;;;;;;;;;;;;;;ACAA;;AAGA;AACA;AAIA;AACA;;;AAGA;AACA;AACA;;;;;AAKA;AACA;AACA;;AAIA;AACA;;;;;;;AClBA;AACA;;AAGA","sources":["webpack://sagu-ui/./src/animations/placeholder.ts","webpack://sagu-ui/./src/packages/Avatar/styles.ts","webpack://sagu-ui/./src/styles/media.ts"],"sourcesContent":["import { css } from 'styled-components'\nimport { theme } from './../styles'\n\nconst placeholder = css`\n  color: ${theme.colors.neutral.lighter};\n  background-image: linear-gradient(\n    to right,\n    currentColor 0%,\n    ${theme.colors.neutral.medium} 20%,\n    currentColor 40%,\n    currentColor 100%\n  );\n  background-size: 80rem 14rem;\n  animation: placeholder 1s linear infinite forwards;\n\n  @keyframes placeholder {\n    0% {\n      background-position: -40rem 0;\n    }\n    100% {\n      background-position: 40rem 0;\n    }\n  }\n`\n\nexport default placeholder\n","import styled, { css, DefaultTheme } from 'styled-components'\nimport { AvatarProps } from '.'\nimport { placeholder } from '../../animations'\n\nconst variantShape = {\n  circle: () => css`\n    border-radius: 50%;\n  `,\n  square: () => css`\n    border-radius: 0;\n  `,\n  rounded: (theme: DefaultTheme) => css`\n    border-radius: ${theme.border.radius};\n  `\n}\n\nexport const Wrapper = styled.div<Pick<AvatarProps, 'size' | 'variant'>>`\n  ${({ theme, size = 'medium', variant = 'circle' }) => css`\n    border-radius: 50%;\n    align-items: center;\n    font-size: ${theme.font.sizes.large};\n    width: ${theme.avatarSizes[size]};\n    height: ${theme.avatarSizes[size]};\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    display: inline-flex;\n    color: ${theme.colors.base.white};\n    ${placeholder}\n    ${!!variant && variantShape[variant](theme)}}\n  `}\n`\n\nexport const Img = styled.img`\n  ${() => css`\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    object-fit: cover;\n  `}\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n"],"names":[],"sourceRoot":""}