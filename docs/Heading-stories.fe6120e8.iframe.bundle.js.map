{"version":3,"file":"Heading-stories.fe6120e8.iframe.bundle.js","mappings":";AAMA;;;;AAKA;AACA;;AAEA;AACA;;AAGA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;;;;;;;AAOA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;;;AC7BA;AACA;;AAGA","sources":["webpack://sagu-ui/./src/packages/Heading/styles.ts","webpack://sagu-ui/./src/styles/media.ts"],"sourcesContent":["import styled, { css, DefaultTheme } from 'styled-components'\nimport { HeadingProps, lineColors } from '.'\nimport { media } from '../../styles'\n\nexport const WrapperModifiers = {\n  small: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.medium};\n    &::after {\n      width: 3rem;\n    }\n  `,\n  medium: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.xlarge};\n\n    ${media.sm`\n      font-size: ${theme.font.sizes.xxlarge};\n    `}\n  `,\n  huge: (theme: DefaultTheme) => css`\n    font-size: ${theme.font.sizes.huge};\n  `,\n  lineLeft: (theme: DefaultTheme, lineColor: lineColors) => css`\n    padding-left: ${theme.spacings.xsmall};\n    border-left: 0.7rem solid ${theme.colors[lineColor].medium};\n  `,\n  lineBottom: (theme: DefaultTheme, lineColor: lineColors) => css`\n    position: relative;\n    margin-bottom: ${theme.spacings.medium};\n    &::after {\n      position: absolute;\n      left: 0;\n      bottom: -1rem;\n      content: '';\n      width: 5rem;\n      border-bottom: 0.5rem solid ${theme.colors[lineColor].medium};\n    }\n  `\n}\n\nexport const Wrapper = styled.h2<HeadingProps>`\n  ${({ theme, color, lineLeft, lineBottom, lineColor, size }) => css`\n    color: ${theme.colors.base[color!]};\n\n    ${lineLeft && WrapperModifiers.lineLeft(theme, lineColor!)}\n    ${lineBottom && WrapperModifiers.lineBottom(theme, lineColor!)}\n    ${!!size && WrapperModifiers[size](theme)}\n  `}\n`\n","import { css } from 'styled-components'\n\ntype Breakpoints = {\n  [key: string]: string\n}\n\nconst breakpoints: Breakpoints = {\n  xs: '480px',\n  sm: '768px',\n  md: '992px',\n  lg: '1200px'\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst media = Object.keys(breakpoints).reduce((acc: any, view) => {\n  acc[view] = (args: string) => css`\n    @media (min-width: ${breakpoints[view]}) {\n      ${args};\n    }\n  `\n  return acc\n}, {})\n\nexport default media\n"],"names":[],"sourceRoot":""}